{"version":3,"sources":["util/audio.ts","components/curve.tsx","components/clipper.tsx","components/toggle-button.tsx","settings.ts","components/droparea.tsx","components/select-file.tsx","components/app.tsx","hooks/useDraggingOver.ts","index.tsx"],"names":["rms","pipe","map","x","mean","Math","sqrt","processChannel","samples","channelData","chunk","ceil","length","loadFileAsArrayBuffer","file","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","e","result","onerror","Error","getChannels","a","channels","audioContext","window","webkitAudioContext","AudioContext","buffer","decodeAudioData","audioData","i","numberOfChannels","push","Array","from","getChannelData","getBaseline","_","loadAudioData","processedChannels","float32ArraytoInt16Array","floatbuffer","int16Buffer","Int16Array","len","encodeMp3","bitrate","encoder","Mp3Encoder","sampleRate","encoded","encodeBuffer","Blob","type","clipChannels","start","end","audioBuffer","extractChannels","channel","subarray","width","margin","innerWidth","innerHeight","xScale","scaleLinear","domain","numberOfSamples","range","yScale","shape","area","y0","y1","d","curve","curveBasis","Curve","graphData","currentTime","duration","trim","pathsRef","useRef","useEffect","dom","extent","flat","select","current","selectAll","data","join","transition","attr","playheadRef","playheadScale","datum","startMaskRef","endMaskRef","durationScale","startMask","endMask","height","viewBox","className","id","y","ref","colorInterpolationFilters","href","floodColor","floodOpacity","mode","in","in2","operator","transform","filter","fill","Status","ToggleButton","status","onContent","offContent","onChange","onClick","classNames","statusTexts","NONE","READING_FILE","EXPORTING_MP3","Clipper","useState","isPlaying","setPlaying","setDuration","startTime","setStartTime","endTime","setEndTime","setCurrentTime","loop","setLoop","setStatus","setGraphData","then","updateMetadata","audio","audioRef","onloadedmetadata","onplay","onpause","playPause","useCallback","pause","play","animationFrame","tick","requestAnimationFrame","cancelAnimationFrame","src","URL","createObjectURL","revokeObjectURL","arrayBuffer","blob","document","createElement","setAttribute","body","appendChild","click","Slider","value","newValue","min","max","step","dropzone","accept","multiple","DropArea","children","onDrop","isHidden","useDropzone","getRootProps","getInputProps","isDragActive","isDragReject","SelectFile","dropz","noClick","open","App","setFile","isDraggingOver","setDraggingOver","dragCount","handleDragOver","preventDefault","handleDragEnter","update","handleDragLeave","handleDrop","addEventListener","removeEventListener","useDraggingOver","acceptedFiles","theme","createMuiTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.16eb6d69.chunk.js","sourcesContent":["import { Mp3Encoder } from \"lamejs\";\nimport * as _ from \"lodash/fp\";\nimport { chunk, map, mean, pipe } from \"lodash/fp\";\n\ninterface Window {\n  webkitAudioContext?: typeof AudioContext;\n}\ndeclare const window: Window;\n\nexport type Channels = [left: Int16Array, right?: Int16Array];\n\nexport const rms = pipe(\n  map((x: number) => x * x),\n  pipe(mean, Math.sqrt),\n);\n\nexport const processChannel = (samples: number) => (\n  channelData: number[],\n): number[] =>\n  pipe(chunk(Math.ceil(channelData.length / samples)), map(rms))(channelData);\n\nexport const loadFileAsArrayBuffer = (file: File): Promise<ArrayBuffer> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onload = (e) => resolve(reader.result as ArrayBuffer);\n    reader.onerror = (e) => reject(new Error(\"Couldn't read file.\"));\n  });\n\nexport const getChannels = async (file: File): Promise<number[][]> => {\n  const channels: number[][] = [];\n  const audioContext = window.webkitAudioContext\n    ? new window.webkitAudioContext()\n    : new AudioContext();\n  const buffer = await loadFileAsArrayBuffer(file);\n  const audioData = await audioContext.decodeAudioData(buffer);\n  for (let i = 0; i < audioData.numberOfChannels; i++) {\n    channels.push(Array.from(audioData.getChannelData(i)));\n  }\n  return channels;\n};\n\n// export const getBaseline = (channels: number[][]) => unzip(channels)\nconst getBaseline = _.pipe(_.unzip, _.map(_.min), _.map(_.toNumber));\n\nexport const loadAudioData = async (\n  file: File,\n  samples: number,\n): Promise<number[][]> => {\n  const audioData = await getChannels(file);\n  const processedChannels = audioData.map(processChannel(samples));\n\n  return processedChannels.length === 1\n    ? processedChannels\n    : [...processedChannels, getBaseline(processedChannels)];\n};\n\nexport function float32ArraytoInt16Array(\n  floatbuffer: Float32Array,\n): Int16Array {\n  var int16Buffer = new Int16Array(floatbuffer.length);\n  for (var i = 0, len = floatbuffer.length; i < len; i++) {\n    if (floatbuffer[i] < 0) {\n      int16Buffer[i] = 0x8000 * floatbuffer[i];\n    } else {\n      int16Buffer[i] = 0x7fff * floatbuffer[i];\n    }\n  }\n  return int16Buffer;\n}\n\nexport async function encodeMp3(\n  channels: Channels,\n  buffer: AudioBuffer,\n  bitrate: number = 128,\n): Promise<Blob> {\n  const encoder = new Mp3Encoder(\n    buffer.numberOfChannels,\n    buffer.sampleRate,\n    bitrate,\n  );\n\n  switch (channels.length) {\n    case 1:\n    case 2: {\n      const encoded = encoder.encodeBuffer(...channels);\n      return new Blob([encoded], { type: \"audio/mp3\" });\n    }\n    default:\n      throw new Error(`Wrong number of channels: ${buffer.numberOfChannels}`);\n  }\n}\n\nexport function extractChannels(audioBuffer: AudioBuffer): Channels {\n  switch (audioBuffer.numberOfChannels) {\n    case 1: {\n      const mono = float32ArraytoInt16Array(audioBuffer.getChannelData(0));\n      return [mono];\n    }\n    case 2: {\n      const left = float32ArraytoInt16Array(audioBuffer.getChannelData(0));\n      const right = float32ArraytoInt16Array(audioBuffer.getChannelData(1));\n      return [left, right];\n    }\n    default:\n      throw new Error(\n        `Wrong number of channels: ${audioBuffer.numberOfChannels}`,\n      );\n  }\n}\n\nexport function clipChannels(\n  buffer: AudioBuffer,\n  start: number,\n  end: number,\n): Channels {\n  const { sampleRate } = buffer;\n  const channels = extractChannels(buffer);\n  return channels.map((channel) =>\n    channel!.subarray(sampleRate * start, sampleRate * end),\n  ) as Channels;\n}\n","import { area, curveBasis, extent, scaleLinear, select } from \"d3\";\nimport React, { useEffect, useRef } from \"react\";\n\n/**\n * @todo send the audio processing to a worker\n */\n\nconst width = 1200;\nconst height = 120;\nconst margin = { top: 0, right: 0, bottom: 0, left: 0 };\nconst innerWidth = width - margin.left - margin.right;\nconst innerHeight = height - margin.top - margin.bottom;\nconst numberOfSamples = width / 5;\n\n// d3 configs\nconst xScale = scaleLinear()\n  .domain([0, numberOfSamples - 1])\n  .range([0, innerWidth]);\nconst yScale = scaleLinear().domain([0, 10]).range([innerHeight, 0]);\nconst shape = area<number>()\n  .x((_, i) => xScale(i))\n  .y0(innerHeight)\n  .y1((d) => yScale(d))\n  .curve(curveBasis);\n\ntype CurveProps = {\n  graphData: number[][];\n  currentTime: number;\n  duration: number;\n  trim: [start: number, end: number];\n  samples: number;\n};\nexport default function Curve({\n  graphData,\n  currentTime,\n  duration,\n  trim,\n  samples,\n}: CurveProps) {\n  const pathsRef = useRef<SVGGElement>(null);\n\n  // update the graph when de data changes\n  useEffect(() => {\n    const dom = extent(graphData.flat(2)) as [number, number];\n    yScale.domain(dom);\n    xScale.domain([0, samples]);\n\n    select(pathsRef.current!)\n      .selectAll(\"path\")\n      .data(graphData)\n      .join(\"path\")\n      .transition()\n      .attr(\"d\", shape);\n  }, [graphData, samples]);\n\n  // playhead\n  const playheadRef = useRef<SVGLineElement>(null);\n  const playheadScale = scaleLinear()\n    .domain([0, duration])\n    .range([1, innerWidth - 1]);\n  useEffect(() => {\n    select(playheadRef.current!)\n      .datum(currentTime)\n      .attr(\"x1\", playheadScale)\n      .attr(\"x2\", playheadScale)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", innerHeight);\n  }, [currentTime, duration, playheadScale]);\n\n  // mask\n  const startMaskRef = useRef<SVGRectElement>(null);\n  const endMaskRef = useRef<SVGRectElement>(null);\n  useEffect(() => {\n    const durationScale = scaleLinear([0, duration], [0, innerWidth]);\n    const [start, end] = trim;\n    const startMask = startMaskRef.current;\n    const endMask = endMaskRef.current;\n\n    select(startMask)\n      .datum(start)\n      .attr(\"width\", (d) => durationScale(d));\n    select(endMask)\n      .datum(end)\n      .attr(\"x\", (d) => durationScale(d))\n      .attr(\"width\", (d) => durationScale(duration - d));\n  }, [trim, duration]);\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n      className=\"curve\"\n    >\n      <defs>\n        <g id=\"filterMask\">\n          <rect x=\"0\" y=\"0\" width=\"0\" height=\"500\" ref={startMaskRef} />\n          <rect x=\"1200\" y=\"0\" width=\"500\" height=\"500\" ref={endMaskRef} />\n        </g>\n\n        <filter id=\"filter\" colorInterpolationFilters=\"linearRGB\">\n          <feImage id=\"feimage\" href=\"#filterMask\" x=\"0\" y=\"0\" result=\"mask\" />\n          <feFlood\n            floodColor=\"#ffffff\"\n            floodOpacity=\"1\"\n            x=\"0%\"\n            y=\"0%\"\n            width=\"100%\"\n            height=\"100%\"\n            result=\"flood\"\n          />\n          <feBlend\n            mode=\"color\"\n            x=\"0%\"\n            y=\"0%\"\n            width=\"100%\"\n            height=\"100%\"\n            in=\"flood\"\n            in2=\"SourceGraphic\"\n            result=\"blend\"\n          />\n          <feFlood\n            floodColor=\"#ffffff\"\n            floodOpacity=\"0.666\"\n            x=\"0%\"\n            y=\"0%\"\n            width=\"100%\"\n            height=\"100%\"\n            result=\"flood1\"\n          />\n          <feBlend\n            mode=\"screen\"\n            x=\"0%\"\n            y=\"0%\"\n            width=\"100%\"\n            height=\"100%\"\n            in=\"blend\"\n            in2=\"flood1\"\n            result=\"blend1\"\n          />\n          <feComposite in2=\"mask\" in=\"blend1\" operator=\"in\" result=\"comp\" />\n          <feMerge result=\"merge\">\n            <feMergeNode in=\"SourceGraphic\" />\n            <feMergeNode in=\"comp\" />\n          </feMerge>\n        </filter>\n      </defs>\n\n      <g transform={`translate(${margin.left}, ${margin.top})`}>\n        <g ref={pathsRef} className=\"curve__paths\" filter=\"url(#filter)\">\n          <rect\n            x=\"0\"\n            y=\"0\"\n            width={innerWidth}\n            height={innerHeight}\n            fill=\"whitesmoke\"\n          />\n        </g>\n        <line ref={playheadRef} className=\"curve__playhead\" />\n      </g>\n    </svg>\n  );\n}\n","import Slider from \"@material-ui/core/Slider\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  IoIosInfinite,\n  IoIosPlay,\n  IoMdDownload as IoIosDownload,\n} from \"react-icons/io\";\nimport { clipChannels, encodeMp3, loadAudioData } from \"../util/audio\";\nimport Curve from \"./curve\";\nimport ToggleButton from \"./toggle-button\";\n\nenum Status {\n  NONE,\n  READING_FILE,\n  EXPORTING_MP3,\n}\n\nconst statusTexts: { [k in Status]: string } = {\n  [Status.NONE]: \"\",\n  [Status.READING_FILE]: \"Reading file\",\n  [Status.EXPORTING_MP3]: \"Exporting MP3\",\n};\n\nconst SAMPLES = 300;\n\ntype ClipperProps = {\n  file: File;\n};\nexport default function Clipper({ file }: ClipperProps) {\n  const [isPlaying, setPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(startTime);\n  const [loop, setLoop] = useState(false);\n  const [status, setStatus] = useState<Status>(Status.NONE);\n  const [graphData, setGraphData] = useState<number[][]>([]);\n\n  useEffect(() => {\n    setStatus(Status.READING_FILE);\n    setGraphData([]);\n    loadAudioData(file, SAMPLES).then((graphData) => {\n      setGraphData(graphData);\n      setStatus(Status.NONE);\n    });\n  }, [file]);\n\n  const updateMetadata = () => {\n    const audio = audioRef.current!;\n    setDuration(audio.duration);\n    setEndTime(audio.duration);\n    setStartTime(0);\n    audio.currentTime = 0;\n  };\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n  useEffect(() => {\n    audioRef.current!.onloadedmetadata = updateMetadata;\n    audioRef.current!.onplay = () => setPlaying(true);\n    audioRef.current!.onpause = () => setPlaying(false);\n  });\n\n  const playPause = useCallback(() => {\n    const audio = audioRef.current!;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n  }, [isPlaying]);\n\n  // update currentTime\n  useEffect(() => {\n    const audio = audioRef.current!;\n    let animationFrame = 0;\n    const tick = () => {\n      setCurrentTime(audio.currentTime);\n      animationFrame = requestAnimationFrame(tick);\n    };\n    tick();\n    return () => {\n      if (animationFrame) cancelAnimationFrame(animationFrame);\n    };\n  }, []);\n\n  // go back to start time after playing\n  useEffect(() => {\n    const audio = audioRef.current!;\n    if (currentTime >= endTime) {\n      audio.currentTime = startTime;\n      if (!loop) {\n        audio.pause();\n      }\n    }\n  }, [currentTime, endTime, loop, startTime]);\n\n  // load dropped file into the audio element\n  useEffect(() => {\n    const audio = audioRef.current!;\n    audio.src = URL.createObjectURL(file);\n    audio.onload = () => {\n      URL.revokeObjectURL(audio.src);\n    };\n  }, [file]);\n\n  // sync current time with start time\n  useEffect(() => {\n    const audio = audioRef.current!;\n    audio.currentTime = startTime;\n  }, [startTime]);\n\n  const handleSelection = (\n    e: React.ChangeEvent<{}>,\n    newValue: number | number[],\n  ) => {\n    const [start, end] = newValue as [number, number];\n    setStartTime(start);\n    setEndTime(end);\n  };\n\n  async function handleDownload() {\n    // fetch file contents\n    const arrayBuffer = await file.arrayBuffer();\n\n    // decode audio data\n    const audioContext = new AudioContext();\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    // encode mp3\n    const channels = clipChannels(audioBuffer, startTime, endTime);\n    const blob = await encodeMp3(channels, audioBuffer);\n\n    // display audio\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"download\", \"clip.mp3\");\n    a.setAttribute(\"hidden\", \"hidden\");\n    a.href = URL.createObjectURL(blob);\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  return (\n    <div className=\"clipper\">\n      <div className=\"clipper__view\">\n        <Curve\n          graphData={graphData}\n          currentTime={currentTime}\n          duration={duration}\n          trim={[startTime, endTime]}\n          samples={SAMPLES}\n        />\n        <Slider\n          value={[startTime, endTime]}\n          onChange={handleSelection}\n          min={0}\n          max={duration}\n          step={0.001}\n        />\n        <audio ref={audioRef} />\n      </div>\n\n      <div className=\"clipper__controls\">\n        <div className=\"controls\">\n          <div className=\"controls__start\">\n            <ToggleButton\n              status={isPlaying}\n              onContent={<IoIosPlay />}\n              offContent={<IoIosPlay />}\n              onChange={playPause}\n            />{\" \"}\n            <ToggleButton\n              status={loop}\n              onContent={<IoIosInfinite />}\n              offContent={<IoIosInfinite />}\n              onChange={(loop) => setLoop(loop)}\n            />\n          </div>\n          <div className=\"controls__middle\">{statusTexts[status]}</div>\n          <div className=\"controls__end\">\n            <button onClick={handleDownload}>\n              <IoIosDownload />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\ntype ToggleButtonProps = {\n  status: boolean;\n  onContent: React.ReactNode;\n  offContent: React.ReactNode;\n  onChange?(status: boolean): void;\n};\nexport default function ToggleButton({\n  status,\n  onContent,\n  offContent,\n  onChange,\n}: ToggleButtonProps) {\n  const handleClick = () => {\n    if (onChange) onChange(!status);\n  };\n\n  return (\n    <button\n      onClick={handleClick}\n      className={classNames(\"btn--toggle\", status ? \"btn--on\" : \"btn--off\")}\n    >\n      {status ? onContent : offContent}\n    </button>\n  );\n}\n","export const dropzone = { accept: \"audio/mpeg\", multiple: false };\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { dropzone } from \"../settings\";\n\ntype DropAreaProps = {\n  children: React.ReactNode;\n  isHidden: boolean;\n  onDrop: (acceptedFiles: File[]) => void;\n};\nexport default function DropArea({\n  children,\n  onDrop,\n  isHidden,\n}: DropAreaProps) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({ ...dropzone, onDrop });\n\n  return (\n    <div\n      className={classNames(\n        \"drop-area\",\n        isDragActive && \"drop-area--active\",\n        isDragReject && \"drop-area--rejected\",\n        isHidden && \"drop-area--hidden\",\n      )}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { dropzone } from \"../settings\";\n\nexport default function SelectFile({ onDrop }) {\n  const dropz = useDropzone({\n    ...dropzone,\n    noClick: true,\n    onDrop,\n  });\n\n  return (\n    <div>\n      <button onClick={dropz.open}>Selecione um arquivo</button>\n      <input {...dropz.getInputProps()} />\n    </div>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport useDraggingOver from \"../hooks/useDraggingOver\";\nimport Clipper from \"./clipper\";\nimport DropArea from \"./droparea\";\nimport SelectFile from \"./select-file\";\n\nexport default function App() {\n  const [file, setFile] = useState<File | null>(null);\n  const isDraggingOver = useDraggingOver();\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    if (acceptedFiles.length < 1) return;\n    setFile(acceptedFiles[0]);\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"layout\">\n        {/* <nav className=\"layout__nav\"></nav> */}\n        <main className=\"layout__content\">\n          <h1>Clipit</h1>\n          {!file && (\n            <div className=\"begin text--center\">\n              <p>\n                Para começar, selecione um arquivo MP3 no seu computador. Você\n                também pode arrastar e soltar o arquivo em qualquer lugar da\n                página.\n              </p>\n              <SelectFile onDrop={onDrop} />\n              <p></p>\n            </div>\n          )}\n          {file && <Clipper file={file} />}\n        </main>\n        {/* <footer className=\"layout__footer\"></footer> */}\n      </div>\n\n      <DropArea isHidden={!isDraggingOver} onDrop={onDrop}>\n        🔥 drop it like it's hot 🔥\n      </DropArea>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function useDraggingOver() {\n  const [isDraggingOver, setDraggingOver] = useState(false);\n\n  useEffect(() => {\n    let dragCount = 0;\n\n    function handleDragOver(e: DragEvent) {\n      e.preventDefault();\n    }\n    function handleDragEnter(e: DragEvent) {\n      dragCount++;\n      update();\n    }\n    function handleDragLeave(e: DragEvent) {\n      dragCount--;\n      update();\n    }\n    function handleDrop(e: DragEvent) {\n      dragCount = 0;\n      update();\n    }\n    function update() {\n      setDraggingOver(dragCount > 0);\n    }\n\n    window.addEventListener(\"dragover\", handleDragOver);\n    window.addEventListener(\"dragenter\", handleDragEnter);\n    window.addEventListener(\"dragleave\", handleDragLeave);\n    window.addEventListener(\"drop\", handleDrop);\n\n    return () => {\n      window.removeEventListener(\"dragover\", handleDragOver);\n      window.removeEventListener(\"dragenter\", handleDragEnter);\n      window.removeEventListener(\"dragleave\", handleDragLeave);\n      window.removeEventListener(\"drop\", handleDrop);\n    };\n  }, []);\n\n  return isDraggingOver;\n}\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\nimport \"./styles.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#8134af\",\n    },\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// import * as serviceWorker from './serviceWorker';\n// serviceWorker.unregister();\n"],"sourceRoot":""}